`timescale 1ns / 1ps


module bit_map(
    input [11:0]VGA_HORZ_COORD,
    input [11:0]VGA_VERT_COORD,
    input [3:0]number,
    output condition_for_string
);
    parameter [3:0] font_size = 2;
    parameter [11:0] pos_x = 0;
    parameter [11:0] pos_y = 0;
    localparam [0:159][0:7] font_map = 
    {   //0
    8'b01111100,
    8'b11000110,
    8'b11000110,
    8'b11001110,
    8'b11011110,
    8'b11110110,
    8'b11100110,
    8'b11000110,
    8'b11000110,
    8'b01111100,
    //1
    8'b00011000,
    8'b00111000,
    8'b01111000,
    8'b00011000,
    8'b00011000,
    8'b00011000,
    8'b00011000,
    8'b00011000,
    8'b00011000,
    8'b01111110,
    //2
    8'b01111100,
    8'b11000110,
    8'b00000110,
    8'b00001100,
    8'b00011000,
    8'b00110000,
    8'b01100000,
    8'b11000000,
    8'b11000110,
    8'b11111110,
    //3
    8'b01111100,
    8'b11000110,
    8'b00000110,
    8'b00000110,
    8'b00111100,
    8'b00000110,
    8'b00000110,
    8'b00000110,
    8'b11000110,
    8'b01111100,
    //4
    8'b00001100,
    8'b00011100,
    8'b00111100,
    8'b01101100,
    8'b01101100,
    8'b11111110,
    8'b00001100,
    8'b00001100,
    8'b00001100,
    8'b00011110,
    //5
    8'b11111110,
    8'b11000000,
    8'b11000000,
    8'b11000000,
    8'b11111100,
    8'b00000110,
    8'b00000110,
    8'b00000110,
    8'b11000110,
    8'b01111100,
    //6
    8'b00111000,
    8'b01100000,
    8'b11000000,
    8'b11000000,
    8'b11111100,
    8'b11000110,
    8'b11000110,
    8'b11000110,
    8'b11000110,
    8'b01111100,
    //7
    8'b11111110,
    8'b11000110,
    8'b00000110,
    8'b00000110,
    8'b00001100,
    8'b00011000,
    8'b00110000,
    8'b00110000,
    8'b00110000,
    8'b00110000,
    //8
    8'b01111100,
    8'b11000110,
    8'b11000110,
    8'b11000110,
    8'b01111100,
    8'b11000110,
    8'b11000110,
    8'b11000110,
    8'b11000110,
    8'b01111100,
    //9
    8'b01111100,
    8'b11000110,
    8'b11000110,
    8'b11000110,
    8'b01111110,
    8'b00000110,
    8'b00000110,
    8'b00000110,
    8'b00001100,
    8'b01111000,
    //A - 10
    8'b00010000,
    8'b00111000,
    8'b01101100,
    8'b11000110,
    8'b11000110,
    8'b11111110,
    8'b11000110,
    8'b11000110,
    8'b11000110,
    8'b11000110,
    //B - 11
    8'b11111100,
    8'b01100110,
    8'b01100110,
    8'b01100110,
    8'b01111100,
    8'b01100110,
    8'b01100110,
    8'b01100110,
    8'b01100110,
    8'b11111100,
    //C - 12
    8'b00111100,
    8'b01100110,
    8'b11000010,
    8'b11000000,
    8'b11000000,
    8'b11000000,
    8'b11000000,
    8'b11000010,
    8'b01100110,
    8'b00111100,
    //D - 13
    8'b11111000,
    8'b01101100,
    8'b01100110,
    8'b01100110,
    8'b01100110,
    8'b01100110,
    8'b01100110,
    8'b01100110,
    8'b01101100,
    8'b11111000,
    //E - 14
    8'b11111110,
    8'b01100110,
    8'b01100010,
    8'b01101000,
    8'b01111000,
    8'b01101000,
    8'b01100000,
    8'b01100010,
    8'b01100110,
    8'b11111110,
    //F - 15
    8'b11111110,
    8'b01100110,
    8'b01100010,
    8'b01101000,
    8'b01111000,
    8'b01101000,
    8'b01100000,
    8'b01100000,
    8'b01100000,
    8'b11110000};
    wire [0:7] number_pos = font_map[number*10+(VGA_VERT_COORD-pos_y)/font_size];
    assign condition_for_string = (VGA_HORZ_COORD >= pos_x) &&  (VGA_HORZ_COORD < pos_x + 8*font_size) && (VGA_VERT_COORD >= pos_y) && (VGA_VERT_COORD < pos_y +  10 * font_size) && (number_pos[(VGA_HORZ_COORD-pos_x)/font_size]);
endmodule
